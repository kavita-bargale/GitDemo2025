<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="4" total="15" passed="10" failed="1" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2025-02-18T20:15:40 IST" name="Loan Department" finished-at="2025-02-18T20:15:40 IST" duration-ms="163">
    <groups>
      <group name="Smoke">
        <method signature="Day1.Demo(java.lang.String)[pri:0, instance:test.Day1@6e20b53a]" name="Demo" class="test.Day1"/>
        <method signature="Day4.pLoan()[pri:0, instance:test.Day4@661972b0]" name="pLoan" class="test.Day4"/>
        <method signature="Day2.WebLoginHomeLoan()[pri:0, instance:test.Day2@1b7cc17c]" name="WebLoginHomeLoan" class="test.Day2"/>
        <method signature="Day3.WebLoginCarLoan(java.lang.String,java.lang.String)[pri:0, instance:test.Day3@59662a0b]" name="WebLoginCarLoan" class="test.Day3"/>
      </group> <!-- Smoke -->
    </groups>
    <test started-at="2025-02-18T20:15:40 IST" name="Personal Loan" finished-at="2025-02-18T20:15:40 IST" duration-ms="58">
      <class name="test.Day1">
        <test-method is-config="true" signature="BeforeTest()[pri:0, instance:test.Day1@6e20b53a]" started-at="2025-02-18T20:15:40 IST" name="BeforeTest" finished-at="2025-02-18T20:15:40 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BeforeTest -->
        <test-method signature="Demo(java.lang.String)[pri:0, instance:test.Day1@6e20b53a]" started-at="2025-02-18T20:15:40 IST" name="Demo" finished-at="2025-02-18T20:15:40 IST" duration-ms="8" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[qaclickacademy.com]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Demo -->
        <test-method is-config="true" signature="AfterTest()[pri:0, instance:test.Day1@6e20b53a]" started-at="2025-02-18T20:15:40 IST" name="AfterTest" finished-at="2025-02-18T20:15:40 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterTest -->
      </class> <!-- test.Day1 -->
      <class name="test.Day4">
        <test-method signature="MobileLogin(java.lang.String,java.lang.String)[pri:0, instance:test.Day4@661972b0]" started-at="2025-02-18T20:15:40 IST" name="MobileLogin" data-provider="getData" finished-at="2025-02-18T20:15:40 IST" duration-ms="4" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[FirstUserName]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[FirstPassword]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- MobileLogin -->
        <test-method signature="MobileLogin(java.lang.String,java.lang.String)[pri:0, instance:test.Day4@661972b0]" started-at="2025-02-18T20:15:40 IST" name="MobileLogin" data-provider="getData" finished-at="2025-02-18T20:15:40 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[SecondUserName]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[SecondPassword]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- MobileLogin -->
        <test-method signature="MobileLogin(java.lang.String,java.lang.String)[pri:0, instance:test.Day4@661972b0]" started-at="2025-02-18T20:15:40 IST" name="MobileLogin" data-provider="getData" finished-at="2025-02-18T20:15:40 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[ThirdUserName]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[ThirdPassword]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- MobileLogin -->
        <test-method signature="pLoan()[pri:0, instance:test.Day4@661972b0]" started-at="2025-02-18T20:15:40 IST" name="pLoan" finished-at="2025-02-18T20:15:40 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- pLoan -->
      </class> <!-- test.Day4 -->
    </test> <!-- Personal Loan -->
    <test started-at="2025-02-18T20:15:40 IST" name="Car Loan" finished-at="2025-02-18T20:15:40 IST" duration-ms="26">
      <class name="test.Day1">
        <test-method is-config="true" signature="BeforeSuite()[pri:0, instance:test.Day1@6e20b53a]" started-at="2025-02-18T20:15:40 IST" name="BeforeSuite" finished-at="2025-02-18T20:15:40 IST" duration-ms="7" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BeforeSuite -->
      </class> <!-- test.Day1 -->
      <class name="test.Day2">
        <test-method is-config="true" signature="BeforeMethods()[pri:0, instance:test.Day2@1b7cc17c]" started-at="2025-02-18T20:15:40 IST" name="BeforeMethods" finished-at="2025-02-18T20:15:40 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BeforeMethods -->
        <test-method signature="FalseTest()[pri:0, instance:test.Day2@1b7cc17c]" started-at="2025-02-18T20:15:40 IST" name="FalseTest" finished-at="2025-02-18T20:15:40 IST" duration-ms="4" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:99)
at org.testng.Assert.failNotEquals(Assert.java:1037)
at org.testng.Assert.assertTrue(Assert.java:45)
at org.testng.Assert.assertTrue(Assert.java:55)
at test.Day2.FalseTest(Day2.java:26)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- FalseTest -->
        <test-method is-config="true" signature="AfetrMethods()[pri:0, instance:test.Day2@1b7cc17c]" started-at="2025-02-18T20:15:40 IST" name="AfetrMethods" finished-at="2025-02-18T20:15:40 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfetrMethods -->
        <test-method is-config="true" signature="BeforeMethods()[pri:0, instance:test.Day2@1b7cc17c]" started-at="2025-02-18T20:15:40 IST" name="BeforeMethods" finished-at="2025-02-18T20:15:40 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BeforeMethods -->
        <test-method signature="WebLoginHomeLoan()[pri:0, instance:test.Day2@1b7cc17c]" started-at="2025-02-18T20:15:40 IST" name="WebLoginHomeLoan" finished-at="2025-02-18T20:15:40 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- WebLoginHomeLoan -->
        <test-method is-config="true" signature="AfetrMethods()[pri:0, instance:test.Day2@1b7cc17c]" started-at="2025-02-18T20:15:40 IST" name="AfetrMethods" finished-at="2025-02-18T20:15:40 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfetrMethods -->
        <test-method signature="APILoginHomeLoan()[pri:0, instance:test.Day2@1b7cc17c]" started-at="2025-02-18T20:15:40 IST" name="APILoginHomeLoan" finished-at="2025-02-18T20:15:40 IST" depends-on-methods="test.Day2.WebLoginHomeLoan" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- APILoginHomeLoan -->
        <test-method is-config="true" signature="BeforeMethods()[pri:0, instance:test.Day2@1b7cc17c]" started-at="2025-02-18T20:15:40 IST" name="BeforeMethods" finished-at="2025-02-18T20:15:40 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BeforeMethods -->
        <test-method is-config="true" signature="AfetrMethods()[pri:0, instance:test.Day2@1b7cc17c]" started-at="2025-02-18T20:15:40 IST" name="AfetrMethods" finished-at="2025-02-18T20:15:40 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfetrMethods -->
      </class> <!-- test.Day2 -->
      <class name="test.Day3">
        <test-method signature="APILoginCarLoan()[pri:0, instance:test.Day3@59662a0b]" started-at="2025-02-18T20:15:40 IST" name="APILoginCarLoan" finished-at="2025-02-18T20:15:40 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- APILoginCarLoan -->
        <test-method is-config="true" signature="BeforeClassExc()[pri:0, instance:test.Day3@59662a0b]" started-at="2025-02-18T20:15:40 IST" name="BeforeClassExc" finished-at="2025-02-18T20:15:40 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BeforeClassExc -->
        <test-method signature="MobileLoginCarLoan()[pri:0, instance:test.Day3@59662a0b]" started-at="2025-02-18T20:15:40 IST" name="MobileLoginCarLoan" finished-at="2025-02-18T20:15:40 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- MobileLoginCarLoan -->
        <test-method signature="WebLoginCarLoan(java.lang.String,java.lang.String)[pri:0, instance:test.Day3@59662a0b]" started-at="2025-02-18T20:15:40 IST" name="WebLoginCarLoan" finished-at="2025-02-18T20:15:40 IST" duration-ms="2" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[carLoan.com]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[123456]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- WebLoginCarLoan -->
        <test-method is-config="true" signature="AfterClassExc()[pri:0, instance:test.Day3@59662a0b]" started-at="2025-02-18T20:15:40 IST" name="AfterClassExc" finished-at="2025-02-18T20:15:40 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterClassExc -->
        <test-method is-config="true" signature="AfterSuite()[pri:0, instance:test.Day3@59662a0b]" started-at="2025-02-18T20:15:40 IST" name="AfterSuite" finished-at="2025-02-18T20:15:40 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterSuite -->
      </class> <!-- test.Day3 -->
    </test> <!-- Car Loan -->
  </suite> <!-- Loan Department -->
</testng-results>
